# DEVELOPMENT docker-compose.dev.yml
# This file defines the development environment.
# Use `docker-compose -f docker-compose.dev.yml up --build` to run.

services:
  easyopen_postgis_dev: # Dev specific service name
    container_name: easyopen_postgis_dev
    image: postgis/postgis:17-3.5
    restart: always
    ports:
      - "${DEV_DB_PORT:-8735}:5432" # Use dev port from .env or default
    environment:
      POSTGRES_PASSWORD: ${DATABASE_DEV_PASSWORD:-barcelona_dev} # Use specific dev password
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_DB: ${DATABASE_DEV_NAME:-easyopendata_database_dev} # Use specific dev DB name
    volumes:
      - ./data/postgres_data_dev:/var/lib/postgresql/data # Dev specific volume path
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql # Can share init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - easyopen_dev_network

  easyopen_backend_dev: # Dev specific service name
    container_name: easyopen_backend_dev
    build:
      context: ./backend
      dockerfile: Dockerfile # Original Dockerfile is fine for dev with command override
    command: uvicorn app.main:app --host 0.0.0.0 --port 5400 --reload # --reload for development
    volumes:
      - ./backend:/app # Mount for live code changes
      - ./data/tileset:/data/tileset # Mount shared data directories
      - ./data/tempfiles:/data/tempfiles
    ports:
      - "${DEV_BACKEND_PORT:-5400}:5400"
    environment:
      DATABASE_URL: postgresql+asyncpg://${DATABASE_USER:-postgres}:${DATABASE_DEV_PASSWORD:-barcelona_dev}@easyopen_postgis_dev:5432/${DATABASE_DEV_NAME:-easyopendata_database_dev}
      STRIPE_SECRET_KEY: ${VITE_STRIPE_SECRET_KEY} # Should be a TEST key for dev from .env
      FRONTEND_URL: ${FRONTEND_DEV_URL:-http://localhost:${DEV_FRONTEND_PORT:-5173}}
      PYTHONUNBUFFERED: "1"
      LOG_LEVEL: "DEBUG"
      ENVIRONMENT: "development"
    depends_on:
      easyopen_postgis_dev:
        condition: service_healthy
    networks:
      - easyopen_dev_network

  easyopen_frontend_dev: # Dev specific service name
    container_name: easyopen_frontend_dev
    build:
      context: ./frontend
      dockerfile: Dockerfile # Original Dockerfile is for Vite dev server
      # No build args needed here as Vite dev server uses runtime env vars
    volumes:
      - ./frontend:/app # Mount for live code changes
      - /app/node_modules # Keep node_modules in container to avoid host conflicts
    ports:
      - "${DEV_FRONTEND_PORT:-5173}:5173"
    environment:
      # Vite dev server needs to know where the backend (on host) is
      VITE_BASE_URL: http://localhost:${DEV_BACKEND_PORT:-5400}
      VITE_TILESET_URL: http://localhost:${DEV_TILESET_PORT:-5576}/tileset.json # Points to dev tileset server
      VITE_STRIPE_PUBLISHABLE_KEY: ${VITE_STRIPE_PUBLISHABLE_KEY} # Test publishable key
      CHOKIDAR_USEPOLLING: "true" # For file watching in Docker
    networks:
      - easyopen_dev_network

  easyopen_tileset_dev: # Dev specific service name
    container_name: easyopen_tileset_dev
    image: nginx:alpine
    restart: always
    ports:
      - "${DEV_TILESET_PORT:-5576}:80"
    volumes:
      - ./data/tileset:/usr/share/nginx/html:ro
      - ./backend/tileset.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - easyopen_dev_network

  easyopen_pgadmin_dev: # Dev specific service name
    container_name: easyopen_pgadmin_dev
    image: dpage/pgadmin4
    restart: always
    ports:
      - "${DEV_PGADMIN_PORT:-5050}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD} # Use dev-specific pgadmin pass if needed
    volumes:
      - ./data/pgadmin_data_dev:/var/lib/pgadmin
    depends_on:
      - easyopen_postgis_dev
    networks:
      - easyopen_dev_network

  # Backup service might not be needed for typical local development
  # easyopen_backup_service_dev: ...

  # Cloudflared might be used for exposing dev environment if needed
  # easyopen_cloudflared_dev: ...

volumes:
  postgres_data_dev: # Renamed for development
    name: easyopen_pgdata_dev_main
  pgadmin_data_dev: # Added for pgAdmin dev persistence
    name: easyopen_pgadmin_data_dev_main

networks:
  easyopen_dev_network: # Renamed for development
    name: easyopen_development_net
    driver: bridge
