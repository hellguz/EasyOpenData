version: '3.8'  # Ensure this is 3.4 or higher

services:
  easyopen_postgis:
    container_name: easyopen_postgis
    image: postgis/postgis:17-3.5
    restart: always
    ports:
      - "8735:5432"
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - ./data/postgres_data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - easyopen_network

  easyopen_backend:
    container_name: easyopen_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 5400 --reload
    volumes:
      - ./backend:/app
      - ./data/tileset:/data/tileset
      - ./data/tileset_combined:/data/tileset_combined
      - ./data/tempfiles:/data/tempfiles
    ports:
      - "5400:5400"
    environment:
      DATABASE_URL: postgresql+asyncpg://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
      STRIPE_SECRET_KEY: ${VITE_STRIPE_SECRET_KEY}
      FRONTEND_URL: ${FRONTEND_URL}
    depends_on:
      easyopen_postgis:
        condition: service_healthy
    networks:
      - easyopen_network

  easyopen_frontend:
    container_name: easyopen_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
      args:
        VITE_BASE_URL: ${VITE_BASE_URL}
        VITE_TILESET_URL: ${VITE_TILESET_URL}
        VITE_STRIPE_PUBLISHABLE_KEY: ${VITE_STRIPE_PUBLISHABLE_KEY}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      VITE_BASE_URL: ${VITE_BASE_URL}
      VITE_TILESET_URL: ${VITE_TILESET_URL}
      VITE_STRIPE_PUBLISHABLE_KEY: ${VITE_STRIPE_PUBLISHABLE_KEY}
    networks:
      - easyopen_network

  easyopen_tileset:
    container_name: easyopen_tileset
    image: nginx:alpine
    restart: always
    ports:
      - "5576:80"
    volumes:
      - ./data/tileset:/usr/share/nginx/html:ro
      - ./backend/tileset.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - easyopen_network

  easyopen_backup_service:
    build: ./backend/db_backup
    container_name: easyopen_backup_service
    depends_on:
      - easyopen_postgis
    volumes:
      - ./data/postgres_backups:/backups
    environment:
      PGPASSWORD: ${DATABASE_PASSWORD}
    networks:
      - easyopen_network

  easyopen_pgadmin:
    container_name: easyopen_pgadmin
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - easyopen_postgis
    networks:
      - easyopen_network

  easyopen_cloudflared:
    container_name: easyopen_cloudflared
    image: cloudflare/cloudflared:latest
    depends_on:
      - easyopen_backend
    restart: always
    command: 'tunnel --no-autoupdate run --token ${CLOUDFLARED_TUNNEL_TOKEN}'
    networks:
      - easyopen_network

volumes:
  postgres_data:

networks:
  easyopen_network:
    driver: bridge

