# ./frontend/Dockerfile.production
# This Dockerfile creates a lean, production-ready Nginx image to serve the React app.

# ---- Build Stage ----
FROM node:18-alpine AS build
WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
RUN yarn install --frozen-lockfile

# Copy the rest of the application source code
COPY . .

# Set build-time arguments for environment variables
ARG VITE_BASE_URL
ARG VITE_TILESET_URL
ARG VITE_STRIPE_PUBLISHABLE_KEY

# Assign ARGs to ENV variables so they are available for the build script
ENV VITE_BASE_URL=${VITE_BASE_URL}
ENV VITE_TILESET_URL=${VITE_TILESET_URL}
ENV VITE_STRIPE_PUBLISHABLE_KEY=${VITE_STRIPE_PUBLISHABLE_KEY}

# Build the React application
RUN yarn build

# ---- Serve Stage ----
FROM nginx:alpine
WORKDIR /usr/share/nginx/html

# Remove default Nginx server configuration
RUN rm /etc/nginx/conf.d/default.conf

# Copy the custom Nginx configuration
COPY ./nginx.conf /etc/nginx/conf.d/default.conf

# Copy the static build output from the build stage
COPY --from=build /app/dist .

# Expose port 80 to listen for traffic from the reverse proxy
EXPOSE 80

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]
